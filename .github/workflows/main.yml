name: Build & Release

on: push

jobs:
  build-and-release:
    name: Build & Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        include:
          - os: ubuntu-latest
            package-manager: sudo snap
          - os: macOS-latest
            package-manager: brew
          - os: windows-latest
            package-manager: choco

    # container:
    #   image: google/dart:latest

    steps:
      - uses: actions/checkout@v2
      # - name: Install Dart
      #   uses: DanTup/gh-actions/setup-dart@v0.0.7
      # - name: Install dependencies
      #   run: pub get
      # - name: Build
      #   run: dart2native bin/main.dart -o main
      - run: ls
      - run: cat pubspec.yaml
      - name: Install YQ
        run: ${{ matrix.package-manager }} install yq
      - name: Read version from pubspec.yaml
        id: project_version
        run: echo ::set-env name=VERSION::$(yq r pubspec.yaml version)
      - run: echo ${{ env.VERSION }}
      # - name: Create release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ env.VERSION }}
      #     release_name: Release ${{ env.VERSION }}
      #     body: ${{ github.event.head_commit.message }}
      #     draft: false
      #     prerelease: false
      # - name: Upload binary to release
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./main
      #     asset_name: config-controller-${{ matrix.os }}
      #     asset_content_type: application/x-binary
