name: Build & Release

on: push

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Install YQ
        run: sudo snap install yq
      - name: Read version from pubspec.yaml
        id: project_version
        run: echo ::set-output name=VERSION::$(yq r pubspec.yaml version)
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.project_version.outputs.VERSION }}
          release_name: Release ${{ steps.project_version.outputs.VERSION }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
  build:
    name: Build for  ${{ matrix.os-display-name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        include:
          - os: ubuntu-latest
            os-display-name: linux
          - os: macOS-latest
            os-display-name: macos
          - os: windows-latest
            os-display-name: windows
    steps:
      - uses: actions/checkout@v2
      - name: Install Dart
        uses: DanTup/gh-actions/setup-dart@v0.0.7
      - name: Install dependencies
        run: pub get
      - name: Build
        run: dart2native bin/main.dart -o config-controller-${{ matrix.os-display-name }}
      - uses: actions/upload-artifact@v2
        with:
          name: config-controller-${{ matrix.os-display-name }}
          path: config-controller-${{ matrix.os-display-name }}
  create-release-assets:
    name: Create Release Assets for ${{ matrix.os-display-name }}
    runs-on: ubuntu-latest
    needs: [create-release, build]

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        include:
          - os: ubuntu-latest
            os-display-name: linux
          - os: macOS-latest
            os-display-name: macos
          - os: windows-latest
            os-display-name: windows

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: config-controller-${{ matrix.os-display-name }}
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: config-controller-${{ matrix.os-display-name }}
      - run: chmod +x config-controller-${{ matrix.os-display-name }}
        if: ${{ matrix.os-display-name == 'linux' || matrix.os-display-name == 'macos' }}
      - run: zip config-controller-${{ matrix.os-display-name }}.zip config-controller-${{ matrix.os-display-name }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.UPLOAD_URL }}
          asset_path: config-controller-${{ matrix.os-display-name }}.zip
          asset_name: config-controller-${{ matrix.os-display-name }}.zip
          asset_content_type: application/zip
