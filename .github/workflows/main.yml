name: Build & Release

on: push

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        include:
          - os: ubuntu-latest
            os-display-name: linux
          - os: macOS-latest
            os-display-name: macos
          - os: windows-latest
            os-display-name: windows
    steps:
      - uses: actions/checkout@v2
      - name: Install Dart
        uses: DanTup/gh-actions/setup-dart@v0.0.7
      - name: Install dependencies
        run: pub get
      - name: Build
        run: dart2native bin/main.dart -o config-controller-${{ matrix.os-display-name }}
      - uses: actions/upload-artifact@v2
        with:
          name: config-controller-${{ matrix.os-display-name }}
          path: config-controller-${{ matrix.os-display-name }}
      # - name: Upload binary to release
      #   id: upload-release-asset
      #   uses: AButler/upload-release-assets@v2.0
      #   with:
      #     files: ${{ matrix.output-file }}
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      # uses: actions/upload-release-asset@v1
      # env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # with:
      #   upload_url: ${{ needs.create-release.outputs.UPLOAD_URL }}
      #   asset_path: ${{ matrix.output-file }}
      #   asset_name: ${{ matrix.output-file }}
      #   asset_content_type: application/x-binary/
  create-release-assets:
    name: Create Release Assets
    runs-on: ubuntu-latest
    needs: build

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        include:
          - os: ubuntu-latest
            os-display-name: linux
          - os: macOS-latest
            os-display-name: macos
          - os: windows-latest
            os-display-name: windows

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: config-controller-${{ matrix.os-display-name }}
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: config-controller-${{ matrix.os-display-name }}
      - run: chmod +x config-controller-${{ matrix.os-display-name }}
        if: ${{ matrix.os-display-name == 'linux' || matrix.os-display-name == 'macos' }}
      - run: zip config-controller-${{ matrix.os-display-name }}.zip config-controller-${{ matrix.os-display-name }}
      - uses: actions/upload-artifact@v2
        with:
          name: config-controller-${{ matrix.os-display-name }}.zip
          path: config-controller-${{ matrix.os-display-name }}.zip
