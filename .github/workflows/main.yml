name: Build & Release

on: push

jobs:
  test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dart
        uses: DanTup/gh-actions/setup-dart@v0.0.7
      - name: Install dependencies
        run: pub get
      - name: Build
        run: dart2native bin/main.dart -o config-controller-macos.bin
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.project_version.outputs.VERSION }}
          release_name: Release ${{ steps.project_version.outputs.VERSION }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
      - name: Upload binary to release
        id: upload-release-asset
        uses: AButler/upload-release-assets@v2.0
        with:
          files: ${{ matrix.output-file }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: config-controller-macos.bin
      #     name: Release v1.0.0
      #     tag_name: v1.0.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# jobs:
#   create-release:
#     name: Create Release
#     runs-on: ubuntu-latest
#     outputs:
#       UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
#     steps:
#       - uses: actions/checkout@v2
#       - name: Install YQ
#         run: sudo snap install yq
#       - name: Read version from pubspec.yaml
#         id: project_version
#         run: echo ::set-output name=VERSION::$(yq r pubspec.yaml version)
#       - name: Create release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ steps.project_version.outputs.VERSION }}
#           release_name: Release ${{ steps.project_version.outputs.VERSION }}
#           body: ${{ github.event.head_commit.message }}
#           draft: false
#           prerelease: false
#   build:
#     name: Build for ${{ matrix.os }}
#     runs-on: ${{ matrix.os }}
#     needs: create-release

#     strategy:
#       fail-fast: true
#       matrix:
#         os: [ubuntu-latest, macOS-latest, windows-latest]
#         include:
#           - os: ubuntu-latest
#             os-display-name: linux
#             output-file: config-controller-linux.bin
#           - os: macOS-latest
#             os-display-name: macos
#             output-file: config-controller-macOS.bin
#           - os: windows-latest
#             os-display-name: windows
#             output-file: config-controller-windows

#     steps:
#       - uses: actions/checkout@v2
#       - name: Install Dart
#         uses: DanTup/gh-actions/setup-dart@v0.0.7
#       - name: Install dependencies
#         run: pub get
#       - name: Build
#         run: dart2native bin/main.dart -o ${{ matrix.output-file }}
#       - name: Upload binary to release
#         id: upload-release-asset
#         uses: AButler/upload-release-assets@v2.0
#         with:
#           files: ${{ matrix.output-file }}
#           repo-token: ${{ secrets.GITHUB_TOKEN }}
#         # uses: actions/upload-release-asset@v1
#         # env:
#         #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         # with:
#         #   upload_url: ${{ needs.create-release.outputs.UPLOAD_URL }}
#         #   asset_path: ${{ matrix.output-file }}
#         #   asset_name: ${{ matrix.output-file }}
#         #   asset_content_type: application/x-binary
