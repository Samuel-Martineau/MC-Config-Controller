name: Build & Release

on: push

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Install YQ
        run: sudo snap install yq
      - name: Read version from pubspec.yaml
        id: project_version
        run: echo ::set-output name=VERSION::$(yq r pubspec.yaml version)
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.project_version.outputs.VERSION }}
          release_name: Release ${{ steps.project_version.outputs.VERSION }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
      - run: echo ::set-env name=UPLOAD_URL::${{ steps.create_release.outputs.upload_url }}
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [create-release]

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Install Dart
        uses: DanTup/gh-actions/setup-dart@v0.0.7
      - name: Install dependencies
        run: pub get
      - name: Build
        run: dart2native bin/main.dart -o main
      - name: Upload binary to release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./main
          asset_name: config-controller-${{ matrix.os }}
          asset_content_type: application/x-binary
